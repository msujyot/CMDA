getwd()
setwd("C:\\Users\\Scout\\Desktop\\School\\CS 3654\\CMDA\\Lecture Notes")
load("exampleData.rData")
load("exampleData.rData")
summary(custdata)
d <- custdata[is.na(custdata$housing.type),
c("recent.move","num.vehicles")]
summary(d)
summary(custdata$is.employed)
summary(custdata$is.employed)
summary(custdata)
d <- custdata[is.na(custdata$housing.type),
c("recent.move","num.vehicles")]
summary(d)
summary(custdata$is.employed)
custdata$is.employed.fix <- factor(custdata$is.employed.fix)
summary(custdata$is.employed.fix) #because not factor, R does not recognize levels/categories
summary(as.factor(custdata$is.employed.fix)) #tell R to treat variable as factor
custdata$is.employed.fix <- factor(custdata$is.employed.fix)
summary(custdata$is.employed.fix) #now the variable is a factor
summary(custdata$Income)
avgIncome <- mean(custdata$Income, na.rm = T) #na.rm is an argument that tells R
avgIncome <- mean(custdata$Income, na.rm = T) #na.rm is an argument that tells R
custdata$Income)
income.fix <- ifelse(is.na(custdata$Income),
avgIncome,
custdata$Income)
summary(income.fix)
getwd()
setwd("C:\\Users\\Scout\\Desktop\\School\\CS 3654\\CMDA")
#reload the insurance data (new version of the file)
load("exampleData1.rData")
?merg
?merge
merge(custdata, medianincome)
norm.income<-income/median.income
load("exampleData1.rData")
merge(custdata, medianincome)
norm.income<-income/median.income
merge(custdata, medianincome)
newdata<-merge(custdata, medianincome)
newdata<-merge(custdata, medianincome)
norm.income<-income/median.income
norm.income<-income.newdata/median.income
norm.income<-newdata.income/median.income
norm.income<-newdata$income/median.income
norm.income<-newdata$income/newdata$median.income
newdata$norm.income<-newdata$income/newdata$median.income
newdata<-merge(custdata, medianincome)
norm.income<-newdata$income/newdata$median.income
summary(norm.income)
newdata$norm.income<-newdata$income/newdata$median.income
newdata$norm.income<-newdata$income/newdata$Median.Income
summary(norm.income)
summary(norm.income)
summary(newdata$norm.income)
testSet <- subset(custdata, custdata$gp <= 0.2)
testSet <- subset(newdata, newdata$income <= 0.2)
testSet <- subset(newdata, newdata$income <= 0.15)
testSet <- subset(newdata, newdata$income <= 0.15)
testSet <- subset(newdata, newdata$income <= 0.3)
testSet <- subset(newdata, newdata$income <= 0.3)
testSet <- subset(newdata, newdata$income <= 1.3)
testSet <- subset(newdata, newdata$income <= 0.3)
trainingSet <- subset(custdata, custdata$gp > 0.3)
testSet <- subset(newdata, newdata$income <= 0.28)
trainingSet <- subset(custdata, custdata$gp > 0.28)
trainingSet <- subset(custdata, custdata$gp > 0.27)
trainingSet <- subset(custdata, custdata$gp > 0.2)
trainingSet <- subset(custdata, custdata$gp > 0.2)
trainingSet <- subset(custdata, custdata$gp > 0.27)
trainingSet <- subset(custdata, custdata$gp > 0.27)
trainingSet <- subset(custdata, custdata$gp > 0.20)
trainingSet <- subset(custdata, custdata$gp > 0.17)
trainingSet <- subset(custdata, custdata$gp > 0.28)
trainingSet <- subset(custdata, custdata$gp > 0.30)
summary(newdata$norm.income)
trainingSet <- subset(custdata, custdata$gp > 0.28)
trainingSet <- subset(custdata, custdata$gp > 0.3)
trainingSet <- subset(custdata, custdata$gp > 0.32)
trainingSet <- subset(custdata, custdata$gp > 0.31)
trainingSet <- subset(custdata, custdata$gp > 0.31)
testSet <- subset(newdata, newdata$income <= 0.31)
testSet <- subset(newdata, newdata$income <= 0.31)
testSet <- subset(newdata, newdata$income <= 0.31)
trainingSet <- subset(custdata, custdata$gp > 0.31)
testSet <- subset(newdata, newdata$income <= 0.51)
testSet <- subset(newdata, newdata$income <= 1.31)
